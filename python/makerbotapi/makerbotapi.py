#!/usr/bin/python
#
# Copyright Jeff Rebeiro (jeff@rebeiro.net)

"""Makerbot Gen 5 API."""

import json
import socket
import urllib2


class Error(Exception):
  """Error."""


class AuthenticationTimeout(Error):
  """Authentication timed out."""


class Makerbot(object):
  """MakerBot."""

  def __init__(self, ip, auth_code=None, auto_connect=True):
    self.auth_code = auth_code
    self.client_id = 'MakerWare'
    self.client_secret = 'python-makerbotapi'
    self.host = ip
    self.jsonrpc_port = 9999

    self.builder = None
    self.commit = None
    self.firmware_version = None
    self.iserial = None
    self.machine_name = None
    self.machine_type = None
    self.vid = None

    self.request_id = 0

    self.rpc_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    if auto_connect:
      self.__ConnectJSONRPC()

  def __ConnectJSONRPC(self):
    """Create a socket connection to the MakerBot JSON RPC interface."""
    self.rpc_socket.connect((self.host, self.jsonrpc_port),)
    self.jsonrpc_connected = True

  def __DisconnectJSONRPC(self):
    """Disconnect from the MakerBot JSON RPC interface."""
    pass

  def __GenerateJSONRPC(self, method, params, id):
    """Generate a JSON RPC payload.
    
    Args:
      method: RPC Method to call
      params: dict containing key/value pairs for the RPC method
      id: ID of this request. Must be sequential in order to retrieve the
          correct output from the bot.

    Returns:
      A JSON RPC formatted string.
    """
    jsonrpc = {'id': id,
               'jsonrpc': '2.0',
               'method': method,
               'params': params}
    # TODO(n-i-x): Do some error checking here
    return json.dumps(jsonrpc)

  def __GetRequestID(self):
    """Increment the request id counter."""
    if self.request_id == 0:
      self.request_id += 1
      return 0
    else:
      self.request_id += 1
      return self.request_id

  def __RPCSend(self, jsonrpc):
    """Send an RPC to the MakerBot JSON RPC interface.
    
    Args:
      jsonrpc: A JSON RPC request generated by __GenerateJSONRPC()

    Returns:
      A JSON decoded response
    """
    self.rpc_socket.sendall(jsonrpc)
    response = self.rpc_socket.recv(1024)
    return json.loads(response)

  def AuthenticateJSONRPC(self):
    """Authenticate to the MakerBot JSON RPC interface."""
    pass

  def DoHandshake(self):
    """Perform handshake with MakerBot over JSON RPC."""
    method = 'handshake'
    params = {'username': 'conveyor',
              'host_version': '1.0'}
    id = self.__GetRequestID()
    jsonrpc = self.__GenerateJSONRPC(method, params, id)
    response = self.__RPCSend(jsonrpc)
    if 'result' in response and len(response.get('result')):
      self.builder = response['result'].get('builder')
      self.commit = response['result'].get('commit')
      self.firmware_version = response['result'].get('firmware_version')
      self.iserial = response['result'].get('iserial')
      self.machine_name = response['result'].get('machine_name')
      self.machine_type = response['result'].get('machine_type')
      self.vid = response['result'].get('vid')

  def GetSystemInformation(self):
    """Get system information from MakerBot over JSON RPC."""
    pass
